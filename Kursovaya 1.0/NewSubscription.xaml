<Page x:Class="Kursovaya_1._0.NewSubscription" Background="#FBF5FF"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Kursovaya_1._0"
      mc:Ignorable="d" 
      d:DesignHeight="720" d:DesignWidth="1170"
      Title="NewSubscription"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#826AED" Offset="0.0"/>
            <GradientStop Color="#826AED" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#fff"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="BlueViolet" Offset="0.0"/>
            <GradientStop Color="BlueViolet" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="9" x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle Fill="#A18CFF"  x:Name="opaqueRect"  Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="455"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto
                           "/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Label Content="Новый абонемент" FontSize="24" FontWeight="Medium" Foreground="#292929" Margin="0 45 0 30"/>
        <Button Grid.Column="1" Height="30" Width="30" HorizontalAlignment="Right" Margin="0 25 40 0" Click="Exid" x:Name="ButtonExitInMain" Visibility="Visible" Background="Transparent" BorderThickness="0">
            <Image Source="Image/exit.png"/>
        </Button>
        <Button Grid.Column="1" Height="25" Width="25" HorizontalAlignment="Right" Margin="0 25 40 0" Click="ExidInSubsc" x:Name="ButtonExitInSub" Visibility="Collapsed" Background="Transparent" BorderThickness="0">
            <Image Source="Image/exit.png"/>
        </Button>

        <Grid Grid.Column="0" Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Height="auto" Grid.RowSpan="2">
                <TextBlock Text="Клиент: " FontSize="15" Height="25"  Margin="0 0 0 10" />
                <TextBlock Text="Услуга: " FontSize="15" Height="25" Margin="0 0 0 10"/>
                <TextBlock Text="Тренер: " FontSize="15" Height="25" Margin="0 0 0 10"/>
                <TextBlock Text="Период: " FontSize="15" Height="25" Margin="0 0 0 10"/>
                <TextBlock Text="График: " FontSize="15" Height="25" Margin="0 0 0 163"/>
                <TextBlock Text="Цена: " FontSize="15" Height="25" Margin="0 0 0 10"/>

            </StackPanel>

            <Grid Grid.Column="1" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="161"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>


                <StackPanel Grid.Column="0">
                    <Border BorderBrush="#fff" BorderThickness="4 " Height="25" Width="160"  HorizontalAlignment="Left" Margin="0 0 0 10" CornerRadius="10">
                        <TextBlock Text="{Binding AddClient.SurName}" Padding="3 0 0 0" FontSize="14" Background="#fff"/>
                    </Border>

                    <Border BorderBrush="#fff" BorderThickness="4 " Height="25" Width="160"  HorizontalAlignment="Left" Margin="0 0 0 10" CornerRadius="10">
                        <TextBlock Text="{Binding AddSelectedService.Title}" Padding="3 0 0 0" FontSize="14" Background="#fff"/>
                    </Border>
                    <Border BorderBrush="#fff" BorderThickness="4 " Height="25" Width="160"  HorizontalAlignment="Left" Margin="0 0 0 10" CornerRadius="10">
                        <TextBlock Text="{Binding AddSelectedWorker.Surname}" Padding="3 0 0 0" FontSize="14" Background="#fff"/>
                    </Border>
                    <ComboBox Style="{DynamicResource ComboBoxStyle1}" Height="25" Width="160"  HorizontalAlignment="Left" Margin="0 0 0 15"  ItemsSource="{Binding PeriodList}" DisplayMemberPath="Duration" SelectedIndex="{Binding SelectedIndexCombobox}"/>

                </StackPanel>

                <StackPanel Grid.Column="1">
                    <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Выбрать" FontSize="10" Margin="5 5 0 5" Click="ChooseClient"/>
                    <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Выбрать" FontSize="10" Margin="5 10 0 5" Click="ChooseService"/>
                    <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Выбрать" FontSize="10" Margin="5 10 0 5" Click="ChooseWorker"/>

                </StackPanel>
                
                <StackPanel Grid.Column="2" Margin="10 30 0 0">
                    <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Удалить" FontSize="10" Margin="5 10 0 5" Click="DeleteService"/>
                    <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Удалить" FontSize="10" Margin="5 10 0 5" Click="DeleteWorker"/>
                </StackPanel>
            </Grid>


            <Grid Grid.Column="1" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="83.57"/>
                    <ColumnDefinition Width="241.43"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <ListBox Height="165" Width="325" Margin="0 0 0 15" HorizontalAlignment="Left" 
                         Visibility="Visible" x:Name="ListBoxGraph" Grid.Row="0" Grid.Column="0" Background="#fff"
                         ItemsSource="{Binding AddGraphList}" DisplayMemberPath="IdGraphNavigation" Grid.ColumnSpan="2" SelectedItem="{Binding RemoveFromListBox}" BorderBrush="#826AED"/>
                <Border BorderBrush="#fff" CornerRadius="10" BorderThickness="4" Height="25" Margin="0,1,0,10"  Width="160" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" >
                    <TextBlock Text="{Binding Price}" Background="#fff" />
                </Border>
                <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Выбрать" FontSize="10" Margin="15,0,0,0" Click="ChooseGraph" x:Name="ButtonGraph" Visibility="Visible" VerticalAlignment="Top" Grid.Column="2"/>
                <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Удалить" FontSize="10" Margin="15 ,30,0,0" Click="RemoveGraph" x:Name="RemoveGraphButton" Visibility="Collapsed" VerticalAlignment="Top" Grid.Column="2"/>
            </Grid>

        </Grid>

        <Button Content="Сохранить" Grid.Column="0" Grid.Row="2" Height="35" Width="130" HorizontalAlignment="Left" VerticalAlignment="Center" Click="AddSubscription"/>





        <Grid Background="#fff" Width="460" x:Name="MyBorder" Visibility="Collapsed" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

            <Border BorderBrush="#826AED" BorderThickness="4" CornerRadius="10 0 0 0">
                    <Label Content="Выбрать клиента" VerticalAlignment="Top" Height="50" Width="455"  Foreground="#fff"
                    Padding="10 15 0 0" FontSize="20" FontWeight="SemiBold"  Background="#826AED" Grid.Row="0"/>
            </Border>
            
                <StackPanel Orientation="Horizontal" Grid.Row="1">

                <Border Margin="35 35 0 0"  BorderThickness="1" BorderBrush="#826AED">
                    <TextBox Height="25" Width="160" VerticalAlignment="Top"   Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SearchTextBox}" Tag="Поиск" Background="#FBF5FF"/>
                </Border>
                    
                    
                     <Button Height="20" Width="55" HorizontalAlignment="Left" Content="Новый" FontSize="10" Margin="5 40 0 5" VerticalAlignment="Top" Click="AddNewClient"/>
                </StackPanel>

                <DataGrid Grid.Row="2" Height="355" Width="420" Margin="0 40 0 0 " AutoGenerateColumns="False" IsReadOnly="True"
                          FontSize="12" ItemsSource="{Binding ClientList}" SelectedItem="{Binding SelectedClient}" 
                          ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle1 }" HorizontalAlignment="Center" Background="#fff">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="95" Header="Фамилия" Binding="{Binding SurName}"/>
                        <DataGridTextColumn Width="95" Header="Имя" Binding="{Binding Name}"/>
                        <DataGridTextColumn Width="95" Header="Отчество" Binding="{Binding Patronymic}"/>
                        <DataGridTextColumn Width="160" Header="Дата рождения"  Binding="{Binding Birthday}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Button Grid.Row="3" Width="140" Height="35" Margin="40 15 0 0" HorizontalAlignment="Left" Content="Добавить" Click="AddClientName"/>

            </Grid>




       
            <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"  x:Name="NewClientBorder" Visibility="Collapsed" Background="#fff">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Новый клиент" VerticalAlignment="Top" Height="50" Width="455"  Foreground="#fff" 
                       Padding="10 15 0 5" FontSize="20" FontWeight="SemiBold"  Background="#826AED" BorderThickness="0 0 0 2" BorderBrush="#826AED"/>

                <Grid Grid.Row="1" Margin="0 15 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                    <TextBlock Text="Фамилия: " FontSize="15" Margin="10 10 0 10" Width="70" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#292929"/>
                        <TextBlock Text="Имя: " FontSize="15" Margin="10 10 0 10" Width="70" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#432818"/>
                        <TextBlock Text="Отчество: " FontSize="15" Margin="10 10 0 10" Width="70" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#432818"/>
                        <TextBlock Text="Телефон: " FontSize="15" Margin="10 10 0 10" Width="70" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#432818"/>
                        <TextBlock Text="Дата рождения: " FontSize="15" Margin="10 10 0 10" Width="110" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#432818"/>
                        <TextBlock Text="Пол: " FontSize="15" Margin="10 10 0 10" Width="70" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#432818"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" >

                    <TextBox Background="#FBF5FF" BorderBrush="Black" Style="{DynamicResource RoundTextBox}" x:Name="SurName" Margin="10 10 0 10" Width="200" Height="25" HorizontalAlignment="Left" Text="{Binding NewClient.SurName, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox  Background="#FBF5FF" Style="{DynamicResource RoundTextBox}" x:Name="Name" Margin="10 10 0 10" Width="200" Height="25" HorizontalAlignment="Left" Text="{Binding NewClient.Name, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Background="#FBF5FF" Style="{DynamicResource RoundTextBox}" x:Name="Patronymic" Margin="10 10 0 10" Width="200" Height="25" HorizontalAlignment="Left" Text="{Binding NewClient.Patronymic, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox  Background="#FBF5FF" Style="{DynamicResource RoundTextBox}" x:Name="PhoneNumber" Margin="10 10 0 10" Width="200" Height="25" HorizontalAlignment="Left" Text="{Binding NewClient.PhoneNumber, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox  Background="#FBF5FF" Style="{DynamicResource RoundTextBox}" x:Name="Birthday" Margin="10 10 0 10" Width="200" Height="25" HorizontalAlignment="Left" Text="{Binding BirthdayNewClient, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox  Background="#FBF5FF" Style="{DynamicResource RoundTextBox}" x:Name="Gender" Margin="10 10 0 10" Width="200" Height="25" HorizontalAlignment="Left" Text="{Binding NewClient.Gender, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                </Grid>

                <Button Style="{DynamicResource ButtonRoundStyle}" Grid.Row="2" Content="Сохранить" Width="130" Height="35" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 0 0 0" Click="AddNewClientInClientList" x:Name="SaveNewClient" />
            </Grid>



        <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"  x:Name="MyBorderService" Visibility="Collapsed" Background="#fff" >
                <Grid.RowDefinitions >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

            <Border BorderBrush="#826AED" BorderThickness="4" CornerRadius="10 0 0 0">
                <Label Content="Выбрать услугу" VerticalAlignment="Top" Height="50" Width="455"  Foreground="#fff"
                    Padding="10 15 0 0" FontSize="20" FontWeight="SemiBold"  Background="#826AED" Grid.Row="0"/>
            </Border>

            <Border Margin="40 35 0 0"  Grid.Row="1" BorderBrush="#826AED" BorderThickness="1" Height="25" Width="160" HorizontalAlignment="Left">
                <TextBox  VerticalAlignment="Top"  Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Background="#FBF5FF" Style="{DynamicResource SearchTextBox}" Tag="Поиск"/>
            </Border>


            <DataGrid Grid.Row="2" Height="355" Width="400" Margin="0 40 0 0 " AutoGenerateColumns="False" IsReadOnly="True" FontSize="12" ItemsSource="{Binding AddServiceList}" 
                      ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle1}" SelectedItem="{Binding SelectedService}" x:Name="MyDataGridService" Background="#FBF5FF">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="95" Header="Название" Binding="{Binding Title}"/>
                        <DataGridTextColumn Width="120" Header="Всего человек" Binding="{Binding NumberOfPersons}"/>
                        <DataGridTextColumn Width="100" Header="Цена за час"  Binding="{Binding PricePerHour}"/>
                        <DataGridTextColumn Width="97" Header="Описание"  Binding="{Binding Description}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Button Grid.Row="3" Width="140" Height="35" Margin="40 15 0 0" HorizontalAlignment="Left" Content="Добавить" Click="AddServiceTitle"/>

            </Grid>





        <Grid  Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"  x:Name="MyBorderWorker" Visibility="Collapsed" Background="#fff">
                <Grid.RowDefinitions >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

            <Border BorderBrush="#826AED" BorderThickness="4" CornerRadius="10 0 0 0">
                <Label Content="Выбрать услугу" VerticalAlignment="Top" Height="50" Width="455"  Foreground="#fff"
                    Padding="10 15 0 0" FontSize="20" FontWeight="SemiBold"  Background="#826AED" Grid.Row="0"/>
            </Border>

            <StackPanel Orientation="Horizontal" Grid.Row="1">

                <Border Margin="40 35 0 0" BorderBrush="#826AED" BorderThickness="1" >
                    <TextBox Height="25" Width="160" VerticalAlignment="Top" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SearchTextBox}" Tag="Поиск"/>
                </Border>
                </StackPanel>

                <DataGrid Grid.Row="2" Height="355" Width="410" Margin="0 40 0 0 " AutoGenerateColumns="False" IsReadOnly="True" FontSize="12" 
                          ItemsSource="{Binding AddWorkerList }" SelectedItem="{Binding SelectedWorker}" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle1}" x:Name="MyDataGridWorker" Background="#FBF5FF">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="95" Header="Фамилия" Binding="{Binding Surname}"/>
                        <DataGridTextColumn Width="95" Header="Имя" Binding="{Binding Name}"/>
                        <DataGridTextColumn Width="90" Header="Отчество"  Binding="{Binding Patronymic}"/>
                        <DataGridTextColumn Width="125" Header="Дата рождения"  Binding="{Binding Birthday}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Button Grid.Row="3" Width="140" Height="35" Margin="40 15 0 0" HorizontalAlignment="Left" Content="Добавить" Click="AddWorkerName"/>

            </Grid>






        <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"   x:Name="MyBorderGraph" Visibility="Collapsed" Background="#fff">
                <Grid.RowDefinitions   >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

            <Border BorderBrush="#826AED" BorderThickness="4" CornerRadius="10 0 0 0">
                <Label Content="Выбрать график" VerticalAlignment="Top" Height="50" Width="455"  Foreground="#fff"
                    Padding="10 15 0 0" FontSize="20" FontWeight="SemiBold"  Background="#826AED" Grid.Row="0"/>
            </Border>

            <StackPanel Orientation="Horizontal" Grid.Row="1">

                </StackPanel>

            <DataGrid Grid.Row="2" Height="355" Width="345" Margin="0,40,0,0" AutoGenerateColumns="False" IsReadOnly="True" FontSize="12" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle1}"
                      ItemsSource="{Binding GraphList}" SelectedItem="{Binding SelectedGraph}" Background="#FBF5FF">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="115" Header="День недели" Binding="{Binding IdGraphNavigation.DayOfWeek}"/>
                        <DataGridTextColumn Width="115" Header="Время начала" Binding="{Binding IdGraphNavigation.StartTime}" />
                        <DataGridTextColumn Width="115" Header="Время конца"  Binding="{Binding IdGraphNavigation.EndTime}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Button Grid.Row="3" Width="140" Height="35" Margin="40 35 0 0" HorizontalAlignment="Left" Content="Добавить" Click="AddGraph"/>

            </Grid>


        


    </Grid>
</Page>
